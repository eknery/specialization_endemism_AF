source('~/.active-rstudio-document', echo=TRUE)
from os import getcwd, chdir
reticulate::repl_python()
n
################################### plotting ################################
setwd("C:/Users/eduar/Documents/GitHub/specialization_endemism_AF")
library(tidyverse)
library(PupillometryR)
library(ggpubr)
library(readr)
library(tidyr)
library(ggplot2)
library(Hmisc)
library(plyr)
library(RColorBrewer)
library(reshape2)
### rao values
spp_rao = read.table("2_environmental_heterogeneity/spp_rao_per_variable.csv",sep=",", h=T)
# my colors
mycols = c( "#1E88E5", "#FFC107", "#D81B60")
spp_rao
### looping over variable
plot_list = list()
for (i in 1:4){
trait_name = colnames(spp_rao)[i+2]
q_plot= ggplot(data= one_env, aes(x=state, y=spp_rao[i+2], fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
plot_list[[i]] = q_plot
}
plot_list = list()
for (i in 1:4){
trait_name = colnames(spp_rao)[i+2]
q_plot= ggplot(data= spp_rao, aes(x=state, y=spp_rao[i+2], fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
plot_list[[i]] = q_plot
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]], nrow=2,ncol=2)
(plot_list[[1]]
plot_list[[1]]
trait_name
spp_rao[trait_name]
q_plot= ggplot(data= spp_rao, aes(x=state, y=trait_name, fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
q_plot
ggplot(data= spp_rao, aes(x=state, y=trait_name, fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
ggplot(data= spp_rao, aes(x=state, y=spp_rao[,1+2], fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
plot_list = list()
for (i in 1:4){
trait_name = colnames(spp_rao)[i+2]
q_plot= ggplot(data= spp_rao, aes(x=state, y=spp_rao[,1+2], fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
plot_list[[i]] = q_plot
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]], nrow=2,ncol=2)
tiff("6_graphs/supp_q_variables/supp_qvalues_per_variables.tiff", units="in", width=6, height=6, res=600)
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]], nrow=2,ncol=2)
dev.off()
plot_list = list()
for (i in 1:4){
trait_name = colnames(spp_rao)[i+2]
q_plot= ggplot(data= spp_rao, aes(x=state, y=spp_rao[,i+2], fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
plot_list[[i]] = q_plot
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]], nrow=2,ncol=2)
spp_rao
colnames(spp_rao
colnames(spp_rao)
colnames(spp_rao)
spp_rao
plot_list = list()
for (i in 1:4){
trait_name = colnames(spp_rao)[i+2]
q_plot= ggplot(data= spp_rao, aes(x=state, y=spp_rao[,i+2], fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
plot_list[[i]] = q_plot
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]], nrow=2,ncol=2)
spp_rao
spp_rao[,2+2]
ggplot(data= spp_rao, aes(x=state, y=spp_rao[,2+2], fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
ggplot(data= spp_rao, aes(x=state, y=spp_rao[,3+2], fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
colnames(spp_rao)
plot_list = list()
for (i in 1:4){
#trait_name = colnames(spp_rao)[i+2]
q_plot= ggplot(data= spp_rao, aes(x=state, y=spp_rao[,i+2], fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ #ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
plot_list[[i]] = q_plot
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]], nrow=2,ncol=2)
plot_list = list()
for (i in 1:4){
trait_index = (i+2)
q_plot= ggplot(data= spp_rao, aes(x=state, y=spp_rao[,trait_index], fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ #ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
plot_list[[i]] = q_plot
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]], nrow=2,ncol=2)
trait_index
spp_rao[,trait_index]
spp_rao[,"rao_solar_radiation"]
colnames(spp_rao)
spp_rao
plot_list = list()
for (i in 1:4){
trait_name = colnames(spp_rao)[i+2]
q_plot= ggplot(data= spp_rao, aes(x=state, y=spp_rao[,trait_name], fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ #ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
plot_list[[i]] = q_plot
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]], nrow=2,ncol=2)
trait_name
plot_list
ggplot(data= spp_rao, aes(x=state, y=spp_rao[,"rao_solar_radiation"], fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ #ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
trait_name
plot_list = list()
for (i in 1:4){
trait_name = colnames(spp_rao)[i+2]
q_plot= ggplot(data= spp_rao, aes(x=state, y=trait_name, fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
plot_list[[i]] = q_plot
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]], nrow=2,ncol=2)
plot_list = list()
for (i in 1:4){
trait_name = colnames(spp_rao)[i+2]
q_plot= ggplot(data= spp_rao, aes(x=state, y=trait_name, fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ #ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
plot_list[[i]] = q_plot
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]], nrow=2,ncol=2)
plot_list = list()
for (i in 1:4){
trait_name = colnames(spp_rao)[i+2]
q_plot= ggplot(data= spp_rao, aes(x=state, y=spp_rao[,trait_name], fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ #ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
plot_list[[i]] = q_plot
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]], nrow=2,ncol=2)
plot_list = list()
for (i in 1:4){
trait_name = colnames(spp_rao)[i+2]
q_plot= ggplot(data= spp_rao, aes(x=state, y=spp_rao[,trait_name], fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ #ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
plot_list[[i]] = q_plot
}
plot_list = list()
for (i in 1:4){
trait_name = colnames(spp_rao)[i+2]
q_plot= ggplot(data= spp_rao, aes(x=state, y=spp_rao[,trait_name], fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ #ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
plot_list[[i]] = q_plot
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]], nrow=2,ncol=2)
plot_list = list()
for (i in 1:4){
trait_name = colnames(spp_rao)[i+2]
q_plot= ggplot(data= spp_rao, aes(x=state, y=spp_rao[,trait_name], fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
plot_list[[i]] = q_plot
print(trait_name)
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]], nrow=2,ncol=2)
data.frame(spp_rao[,c(1,2)], spp_rao[,2+1])
plot_list = list()
for (i in 1:4){
trait_name = colnames(spp_rao)[2+i]
one_env = data.frame(spp_rao[,c(1,2)], spp_rao[,2+i])
colnames(one_env)[3] = "trait"
q_plot= ggplot(data= one_nv, aes(x=state, y=trait, fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
plot_list[[i]] = q_plot
}
plot_list = list()
for (i in 1:4){
trait_name = colnames(spp_rao)[2+i]
one_env = data.frame(spp_rao[,c(1,2)], spp_rao[,2+i])
colnames(one_env)[3] = "trait"
q_plot= ggplot(data= one_env, aes(x=state, y=trait, fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.07), size = 2, alpha = 0.65) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.25)+
geom_flat_violin(position = position_nudge(x = 0.12, y = 0), alpha = 0.25) +
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic distribution")+ ylab(trait_name)+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other\ndomains", "other" = "outside AF"))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=6),legend.position = "none")
plot_list[[i]] = q_plot
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]], nrow=2,ncol=2)
tiff("6_graphs/supp_q_variables/supp_qvalues_per_variables.tiff", units="in", width=6, height=6, res=600)
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]], nrow=2,ncol=2)
dev.off()
tiff("6_graphs/supp_q_variables/supp_qvalues_per_variables.tiff", units="in", width=6, height=6, res=600)
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]], nrow=2,ncol=2)
dev.off()
tiff("6_graphs/supp_qvaleus_per_variables/supp_qvalues_per_variables.tiff", units="in", width=6, height=6, res=600)
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]], nrow=2,ncol=2)
dev.off()
tiff("6_graphs/supp_qvalues_per_variables/supp_qvalues_per_variables.tiff", units="in", width=6, height=6, res=600)
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]], nrow=2,ncol=2)
dev.off()
### setting working directory
setwd("C:/Users/eduar/Documents/GitHub/specialization_endemism_AF")
### packages
library(rexpokit)
library(cladoRcpp)
library(BioGeoBEARS)
library(ape)
library(phytools)
library(geiger)
library(OUwie)
library(nlme)
### my own functions
source("./5_comparative_analysis/function_fit_evo_models.R")
source("./5_comparative_analysis/function_choose_best.R")
### number of trees
n_trees = length (list.files("0_data/100_trees"))
### mcc tree
mcc_fn = c("0_data/mcc_phylo.nwk")
mcc = read.tree(mcc_fn)
### spp geographic distribution
spp_geographic_distribution = read.table("1_geographic_classification/spp_geographic_distribution.csv", sep=',', h=T)
# named geographic states
state = spp_geographic_distribution$state
names(state) = spp_geographic_distribution$species
### reading rao values
spp_rao = read.table("2_environmental_heterogeneity/spp_rao.csv", header =T, sep=",",  na.strings = "NA", fill=T)
#named rao
rao = spp_rao$rao
names(rao) = spp_rao$species
### reading altitude values
spp_altitude = read.table("2_environmental_heterogeneity/spp_altitude.csv", header =T, sep=",",  na.strings = "NA", fill=T)
altitude = spp_altitude$altitude
names(altitude) = spp_altitude$species
### reading hvolume data
regimes_hvolumes = read.table("3_hypervolume_inference/regimes_hvolumes.csv", sep=",", h=T)
# named hvolumes
hvolume = regimes_hvolumes$hvolume
names(hvolume) = regimes_hvolumes$species
### reading range data
regimes_ranges = read.table("4_geographic_inference/regimes_ranges.csv", header =T, sep=",",  na.strings = "NA", fill=T)
# named ranges
range = regimes_ranges$range
names(range) = regimes_ranges$species
### reading autocorrelation data
spp_moran = read.table("4_geographic_inference/spp_moran.csv", header =T, sep=",",  na.strings = "NA", fill=T)
# named autocorrelation
moran = apply(spp_moran[,2:5], MARGIN = 1, mean)
names(moran) = spp_moran$species
spp_trait_regimes = regimes_ranges
all_best_models = data.frame(matrix(NA, nrow=n_trees, ncol=4))
colnames(all_best_models) = c(c("model","llik","aicc","delta_aicc"))
all_best_estimates = vector("list" , n_trees)
all_models = c("BM1","BMS","OU1","OUM","OUMV","OUMA","OUMVA")
for (i in 2 ){
# phylogenetic tree
tr_fn = paste("0_data/100_trees/tree", as.character(i), sep="_")
tr = read.tree(tr_fn)
# DEC ancestral states
dec_fn = paste("5_comparative_analysis/DEC_ancestral_reconstructions/anc_node_states",as.character(i), sep="_")
anc_node_states = read.table(dec_fn, sep=",", h=T)
tr$node.label = anc_node_states$state
# fitting evolutionary models
all_fits = fit_evo_models(tree=tr, regimes=spp_trait_regimes, models_to_fit = all_models)
best_choice = choose_best(all_fits)
all_best_models[i,] = best_choice$best_fit
all_best_estimates[[i]] = best_choice$best_estimates
print(i)
}
all_fits
best_choice
all_fits
for (i in 5){
# phylogenetic tree
tr_fn = paste("0_data/100_trees/tree", as.character(i), sep="_")
tr = read.tree(tr_fn)
# DEC ancestral states
dec_fn = paste("5_comparative_analysis/DEC_ancestral_reconstructions/anc_node_states",as.character(i), sep="_")
anc_node_states = read.table(dec_fn, sep=",", h=T)
tr$node.label = anc_node_states$state
# fitting evolutionary models
all_fits = fit_evo_models(tree=tr, regimes=spp_trait_regimes, models_to_fit = all_models)
best_choice = choose_best(all_fits)
all_best_models[i,] = best_choice$best_fit
all_best_estimates[[i]] = best_choice$best_estimates
print(i)
}
all_fits
best_choice
for (i in 1){
# phylogenetic tree
tr_fn = paste("0_data/100_trees/tree", as.character(i), sep="_")
tr = read.tree(tr_fn)
# DEC ancestral states
dec_fn = paste("5_comparative_analysis/DEC_ancestral_reconstructions/anc_node_states",as.character(i), sep="_")
anc_node_states = read.table(dec_fn, sep=",", h=T)
tr$node.label = anc_node_states$state
# fitting evolutionary models
all_fits = fit_evo_models(tree=tr, regimes=spp_trait_regimes, models_to_fit = all_models)
best_choice = choose_best(all_fits)
all_best_models[i,] = best_choice$best_fit
all_best_estimates[[i]] = best_choice$best_estimates
print(i)
}
all_fits
863.034786606256 - 861.235641501456
