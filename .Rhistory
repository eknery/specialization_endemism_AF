############################# calculating differences and effects #################
spp_rao = read.table("2_environmental_heterogeneity/spp_rao.csv", header =T, sep=",",  na.strings = "NA", fill=T)
aggregate(spp_rao$rao, list(spp_rao$state), mean)
4/12
6/10
state_dispersion_rao = aggregate(spp_rao$rao, list(spp_rao$state), sd )
state_dispersion_rao
state_overall_rao = aggregate(spp_rao$rao, list(spp_rao$state), mean)
(state_overall_rao$x[1] - state_overall_rao$x[2])/ state_overall_rao$x[2]
(state_overall_rao$x[1] - state_overall_rao$x[3])/ state_overall_rao$x[3]
4/12
(state_overall_rao$x[1] - state_overall_rao$x[3])/ state_overall_rao$x[3]
6/10
############################# calculating differences and effects #################
regimes_hvolumes = read.table("3_hypervolume_inference/regimes_hvolumes.csv", header =T, sep=",",  na.strings = "NA", fill=T)
state_overall_hv = aggregate(regimes_hvolumes$hvolume, list(regimes_hvolumes$state), mean)
state_dispersion_hv = aggregate(regimes_hvolumes$hvolume, list(regimes_hvolumes$state), sd )
state_overall_hv
state_dispersion_hv
(state_overall_hv$x[1] - state_overall_hv$x[2])/ state_overall_hv$x[2]
4.64-1.84
2.8/4.64
4.55-1.84
2.71/4.55
####################### describing convex hull area per distribution ##################
### load
regimes_range = read.table("4_geographic_inference/regimes_ranges.csv", sep=',', h=T)
### summary
aggregate(regimes_ranges$range, by=list(regimes_ranges$state), median)
regimes_range
### summary
aggregate(regimes_ranges$range, by=list(regimes_ranges$state), median)
### summary
aggregate(regimes_range$range, by=list(regimes_ranges$state), median)
####################### describing convex hull area per distribution ##################
### load
regimes_range = read.table("4_geographic_inference/regimes_ranges.csv", sep=',', h=T)
### summary
aggregate(regimes_range$range, by=list(regimes_ranges$state), median)
####################### describing convex hull area per distribution ##################
### load
regimes_ranges = read.table("4_geographic_inference/regimes_ranges.csv", sep=',', h=T)
### summary
aggregate(regimes_ranges$range, by=list(regimes_ranges$state), median)
aggregate(regimes_ranges$range, by=list(regimes_ranges$state), IQR)
### summary
aggregate(regimes_ranges$range, by=list(regimes_ranges$state), mean)
### summary
aggregate(regimes_ranges$range, by=list(regimes_ranges$state), median)
library(tidyverse)
library(PupillometryR)
library(ggpubr)
library(readr)
library(tidyr)
library(ggplot2)
library(Hmisc)
library(plyr)
library(RColorBrewer)
library(reshape2)
### my colors
mycols = c( "#1E88E5", "#FFC107", "#D81B60")
### ancestral data
anc_data = read.table("5_comparative_analysis/anc_range_data_OUMV.csv", sep=",", h=T)
# time boundaries
old_age = min(anc_data$anc_node_ages)
new_age = round(max(anc_data$anc_node_ages), 3)
# dividing time in intervals
intervals = anc_data$anc_node_ages
breaks = seq(new_age, old_age, by= (old_age - new_age)/10)
for (i in 1:length(breaks)){
intervals[which(anc_data$anc_node_ages > breaks[i+1] & anc_data$anc_node_ages < breaks[i])] = (breaks[i] + breaks[i+1])/2
}
anc_data = data.frame(anc_data, intervals)
# removing outliers
anc_data = anc_data[anc_data$anc_range > 0 & anc_data$anc_range < 270,]
anc_data
# summarizing range by state across intervals
list_anc_data = split(anc_data, f= anc_data$state)
all_summary_ranges = data.frame()
for (i in 1:length(list_anc_data)){
central_ranges = aggregate(list_anc_data[[i]]$anc_range, by= list(list_anc_data[[i]]$intervals), mean)
dispersion_ranges  = aggregate(list_anc_data[[i]]$anc_range, by= list(list_anc_data[[i]]$intervals), function(x){sd(x)/sqrt(length(x)) })
state = rep(names(list_anc_data)[i], nrow(central_ranges) )
summary_ranges = cbind(state, central_ranges, dispersion_ranges[,-1])
all_summary_ranges = rbind(all_summary_ranges, summary_ranges)
}
colnames(all_summary_ranges) = c("state", "age", "central", "dispersion")
all_summary_ranges
# export
write.table(all_summary_ranges, "6_graphs/all_summary_ranges.csv", sep=",", h=T)
# export
write.table(all_summary_ranges, "6_graphs/all_summary_ranges.csv", sep=",", quote=F, row.names=F)
