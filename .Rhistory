############################# calculating differences and effects #################
spp_rao = read.table("2_environmental_heterogeneity/spp_rao.csv", header =T, sep=",",  na.strings = "NA", fill=T)
aggregate(spp_rao$rao, list(spp_rao$state), mean)
4/12
6/10
state_dispersion_rao = aggregate(spp_rao$rao, list(spp_rao$state), sd )
state_dispersion_rao
state_overall_rao = aggregate(spp_rao$rao, list(spp_rao$state), mean)
(state_overall_rao$x[1] - state_overall_rao$x[2])/ state_overall_rao$x[2]
(state_overall_rao$x[1] - state_overall_rao$x[3])/ state_overall_rao$x[3]
4/12
(state_overall_rao$x[1] - state_overall_rao$x[3])/ state_overall_rao$x[3]
6/10
############################# calculating differences and effects #################
regimes_hvolumes = read.table("3_hypervolume_inference/regimes_hvolumes.csv", header =T, sep=",",  na.strings = "NA", fill=T)
state_overall_hv = aggregate(regimes_hvolumes$hvolume, list(regimes_hvolumes$state), mean)
state_dispersion_hv = aggregate(regimes_hvolumes$hvolume, list(regimes_hvolumes$state), sd )
state_overall_hv
state_dispersion_hv
(state_overall_hv$x[1] - state_overall_hv$x[2])/ state_overall_hv$x[2]
4.64-1.84
2.8/4.64
4.55-1.84
2.71/4.55
####################### describing convex hull area per distribution ##################
### load
regimes_range = read.table("4_geographic_inference/regimes_ranges.csv", sep=',', h=T)
### summary
aggregate(regimes_ranges$range, by=list(regimes_ranges$state), median)
regimes_range
### summary
aggregate(regimes_ranges$range, by=list(regimes_ranges$state), median)
### summary
aggregate(regimes_range$range, by=list(regimes_ranges$state), median)
####################### describing convex hull area per distribution ##################
### load
regimes_range = read.table("4_geographic_inference/regimes_ranges.csv", sep=',', h=T)
### summary
aggregate(regimes_range$range, by=list(regimes_ranges$state), median)
####################### describing convex hull area per distribution ##################
### load
regimes_ranges = read.table("4_geographic_inference/regimes_ranges.csv", sep=',', h=T)
### summary
aggregate(regimes_ranges$range, by=list(regimes_ranges$state), median)
aggregate(regimes_ranges$range, by=list(regimes_ranges$state), IQR)
### summary
aggregate(regimes_ranges$range, by=list(regimes_ranges$state), mean)
### summary
aggregate(regimes_ranges$range, by=list(regimes_ranges$state), median)
library(tidyverse)
library(PupillometryR)
library(ggpubr)
library(readr)
library(tidyr)
library(ggplot2)
library(Hmisc)
library(plyr)
library(RColorBrewer)
library(reshape2)
### my colors
mycols = c( "#1E88E5", "#FFC107", "#D81B60")
### ancestral data
anc_data = read.table("5_comparative_analysis/anc_range_data_OUMV.csv", sep=",", h=T)
# time boundaries
old_age = min(anc_data$anc_node_ages)
new_age = round(max(anc_data$anc_node_ages), 3)
# dividing time in intervals
intervals = anc_data$anc_node_ages
breaks = seq(new_age, old_age, by= (old_age - new_age)/10)
for (i in 1:length(breaks)){
intervals[which(anc_data$anc_node_ages > breaks[i+1] & anc_data$anc_node_ages < breaks[i])] = (breaks[i] + breaks[i+1])/2
}
anc_data = data.frame(anc_data, intervals)
# removing outliers
anc_data = anc_data[anc_data$anc_range > 0 & anc_data$anc_range < 270,]
anc_data
# summarizing range by state across intervals
list_anc_data = split(anc_data, f= anc_data$state)
all_summary_ranges = data.frame()
for (i in 1:length(list_anc_data)){
central_ranges = aggregate(list_anc_data[[i]]$anc_range, by= list(list_anc_data[[i]]$intervals), mean)
dispersion_ranges  = aggregate(list_anc_data[[i]]$anc_range, by= list(list_anc_data[[i]]$intervals), function(x){sd(x)/sqrt(length(x)) })
state = rep(names(list_anc_data)[i], nrow(central_ranges) )
summary_ranges = cbind(state, central_ranges, dispersion_ranges[,-1])
all_summary_ranges = rbind(all_summary_ranges, summary_ranges)
}
colnames(all_summary_ranges) = c("state", "age", "central", "dispersion")
all_summary_ranges
# export
write.table(all_summary_ranges, "6_graphs/all_summary_ranges.csv", sep=",", h=T)
# export
write.table(all_summary_ranges, "6_graphs/all_summary_ranges.csv", sep=",", quote=F, row.names=F)
### best-estimates
best_estimates_table = read.table("5_comparative_analysis/range_best_estimates.csv", sep=",", h=T)
# organizing best-fit estimates
af = best_estimates_table[-46,c(1,2,7,8)]
afot = best_estimates_table[-46,c(3,4,9,10)]
ot = best_estimates_table[-46,c(5,6,11,12)]
colnames(af) = colnames(afot) = colnames(ot) = c("theta", "se", "alpha", "sigma_sq")
state = c( rep("AF", nrow(af)), rep("AFother", nrow(afot)), rep("other", nrow(ot) ) )
model_estimates = data.frame(state, rbind(af, afot, ot))
aggregate(model_estimates[,2:5], by=list(model_estimates[,1]), mean)
aggregate(model_estimates[,2:5], by=list(model_estimates[,1]), sd)
ggplot(data= model_estimates, aes(x=state, y=theta, fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.10), size = 1, alpha = 0.1) +
geom_boxplot(width = 0.30, outlier.shape = NA, alpha = 0.25)+
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("")+ ylab("theta")+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other", "other" = "Outside AF"))+
ylim(c(0,750))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=14,face="bold"),axis.text.x=element_text(size=6),legend.position = "none")
library(tidyverse)
library(PupillometryR)
library(ggpubr)
library(readr)
library(tidyr)
library(ggplot2)
library(Hmisc)
library(plyr)
library(RColorBrewer)
library(reshape2)
ggplot(data= model_estimates, aes(x=state, y=theta, fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.10), size = 1, alpha = 0.1) +
geom_boxplot(width = 0.30, outlier.shape = NA, alpha = 0.25)+
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("")+ ylab("theta")+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other", "other" = "Outside AF"))+
ylim(c(0,750))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=14,face="bold"),axis.text.x=element_text(size=6),legend.position = "none")
# my colors
mycols = c( "#1E88E5", "#FFC107", "#D81B60")
ggplot(data= model_estimates, aes(x=state, y=theta, fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.10), size = 1, alpha = 0.1) +
geom_boxplot(width = 0.30, outlier.shape = NA, alpha = 0.25)+
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("")+ ylab("theta")+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other", "other" = "Outside AF"))+
ylim(c(0,750))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=14,face="bold"),axis.text.x=element_text(size=6),legend.position = "none")
ggplot(data= model_estimates, aes(x=state, y=theta, fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.10), size = 1, alpha = 0.1) +
geom_boxplot(width = 0.45, outlier.shape = NA, alpha = 0.25)+
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("")+ ylab("theta")+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other", "other" = "Outside AF"))+
ylim(c(0,750))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=14,face="bold"),axis.text.x=element_text(size=6),legend.position = "none")
ggplot(data= model_estimates, aes(x=state, y=theta, fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.40), size = 1, alpha = 0.1) +
geom_boxplot(width = 0.50, outlier.shape = NA, alpha = 0.25)+
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("")+ ylab("theta")+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other", "other" = "Outside AF"))+
ylim(c(0,750))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=14,face="bold"),axis.text.x=element_text(size=6),legend.position = "none")
ggplot(data= model_estimates, aes(x=state, y=theta, fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.20), size = 1, alpha = 0.1) +
geom_boxplot(width = 0.50, outlier.shape = NA, alpha = 0.25)+
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("")+ ylab("theta")+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other", "other" = "Outside AF"))+
ylim(c(0,750))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=14,face="bold"),axis.text.x=element_text(size=6),legend.position = "none")
ggplot(data= model_estimates, aes(x=state, y=sqrt(sigma_sq), fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.20), size = 1, alpha = 0.1) +
geom_boxplot(width = 0.50, outlier.shape = NA, alpha = 0.25)+
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic\ndistribution")+ ylab("sigma")+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other", "other" = "Outside AF"))+
ylim(c(0,3000))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=14,face="bold"),axis.text.x=element_text(size=6),legend.position = "none")
### BM simulations
bm_simulations = read.table("5_comparative_analysis/range_bm_simulations.csv", sep=",", h=T)
# organizing bm simulations
model = rep("bm1",nrow(bm_simulations))
bm_simulations = data.frame(model, bm_simulations)
colnames(bm_simulations)[2] = "trait"
## observed hvolumes
regimes = read.table("4_geographic_inference/regimes_ranges.csv", sep=",", h=T)
# summarizing hvolumes by state
means=aggregate(regimes[,3], by=list(regimes[,2]),mean)
sds=aggregate(regimes[,3], by=list(regimes[,2]),sd)
ns=aggregate(regimes[,3], by=list(regimes[,2]),length)
ses=sds[,2]/sqrt(ns[,2])
summary_regimes=data.frame(means,sds[,2],ses)
colnames(summary_regimes)=c("state","mean","sd","se")
ggplot(data=bm_simulations,aes(x=trait)) +
geom_density(alpha=0.5,color="lightgray", fill="lightgray")+
scale_colour_manual(values=mycols)+
scale_fill_manual(values=mycols)+
geom_vline(data=summary_regimes,aes(xintercept = mean),linetype="solid",colour=c(mycols),size=0.75)+
geom_vline(data=summary_regimes,aes(xintercept = mean-se),linetype="dotted",colour=c(mycols),size=0.45)+
geom_vline(data=summary_regimes,aes(xintercept = mean+se),linetype="dotted",colour=c(mycols),size=0.45)+
labs(x="mean \n convex hull area", y="density")+
#xlim(c(0,25))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=14,face="bold"),axis.text=element_text(size=8),legend.position = "none")
ggarrange(theta_plot,sigma_plot, bm_plot, nrow=3,ncol=1)
theta_plot= ggplot(data= model_estimates, aes(x=state, y=theta, fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.20), size = 1, alpha = 0.1) +
geom_boxplot(width = 0.50, outlier.shape = NA, alpha = 0.25)+
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("")+ ylab("theta")+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other", "other" = "Outside AF"))+
ylim(c(0,750))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=14,face="bold"),axis.text.x=element_text(size=6),legend.position = "none")
sigma_plot= ggplot(data= model_estimates, aes(x=state, y=sqrt(sigma_sq), fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.20), size = 1, alpha = 0.1) +
geom_boxplot(width = 0.50, outlier.shape = NA, alpha = 0.25)+
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic\ndistribution")+ ylab("sigma")+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other", "other" = "Outside AF"))+
ylim(c(0,3000))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=14,face="bold"),axis.text.x=element_text(size=6),legend.position = "none")
bm_plot= ggplot(data=bm_simulations,aes(x=trait)) +
geom_density(alpha=0.5,color="lightgray", fill="lightgray")+
scale_colour_manual(values=mycols)+
scale_fill_manual(values=mycols)+
geom_vline(data=summary_regimes,aes(xintercept = mean),linetype="solid",colour=c(mycols),size=0.75)+
geom_vline(data=summary_regimes,aes(xintercept = mean-se),linetype="dotted",colour=c(mycols),size=0.45)+
geom_vline(data=summary_regimes,aes(xintercept = mean+se),linetype="dotted",colour=c(mycols),size=0.45)+
labs(x="mean \n convex hull area", y="density")+
#xlim(c(0,25))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=14,face="bold"),axis.text=element_text(size=8),legend.position = "none")
ggarrange(theta_plot,sigma_plot, bm_plot, nrow=3,ncol=1)
tiff("6_graphs/evo_model_estimates_range.tiff", units="in", width=2.5, height=6, res=600)
ggarrange(theta_plot,sigma_plot, bm_plot, nrow=3,ncol=1)
dev.off()
### best-estimates
best_estimates_table = read.table("5_comparative_analysis/hv_best_estimates.csv", sep=",", h=T)
# organizing best-fit estimates
af = best_estimates_table[-46,c(1,2,7,8)]
afot = best_estimates_table[-46,c(3,4,9,10)]
ot = best_estimates_table[-46,c(5,6,11,12)]
colnames(af) = colnames(afot) = colnames(ot) = c("theta", "se", "alpha", "sigma_sq")
state = c( rep("AF", nrow(af)), rep("AFother", nrow(afot)), rep("other", nrow(ot) ) )
model_estimates = data.frame(state, rbind(af, afot, ot))
aggregate(model_estimates[,2:5], by=list(model_estimates[,1]), mean)
aggregate(model_estimates[,2:5], by=list(model_estimates[,1]), sd)
### BM simulations
bm_simulations = read.table("5_comparative_analysis/hv_bm_simulations.csv", sep=",", h=T)
# organizing bm simulations
model = rep("bm1",nrow(bm_simulations))
bm_simulations = data.frame(model, bm_simulations)
colnames(bm_simulations)[2] = "trait"
## observed hvolumes
regimes = read.table("4_geographic_inference/regimes_ranges.csv", sep=",", h=T)
# summarizing hvolumes by state
means=aggregate(regimes[,3], by=list(regimes[,2]),mean)
sds=aggregate(regimes[,3], by=list(regimes[,2]),sd)
ns=aggregate(regimes[,3], by=list(regimes[,2]),length)
ses=sds[,2]/sqrt(ns[,2])
summary_regimes=data.frame(means,sds[,2],ses)
colnames(summary_regimes)=c("state","mean","sd","se")
theta_plot= ggplot(data= model_estimates, aes(x=state, y=theta, fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.20), size = 1, alpha = 0.1) +
geom_boxplot(width = 0.50, outlier.shape = NA, alpha = 0.25)+
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("")+ ylab("theta")+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other", "other" = "Outside AF"))+
ylim(c(0,750))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=14,face="bold"),axis.text.x=element_text(size=6),legend.position = "none")
sigma_plot= ggplot(data= model_estimates, aes(x=state, y=sqrt(sigma_sq), fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.20), size = 1, alpha = 0.1) +
geom_boxplot(width = 0.50, outlier.shape = NA, alpha = 0.25)+
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic\ndistribution")+ ylab("sigma")+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other", "other" = "Outside AF"))+
ylim(c(0,3000))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=14,face="bold"),axis.text.x=element_text(size=6),legend.position = "none")
bm_plot= ggplot(data=bm_simulations,aes(x=trait)) +
geom_density(alpha=0.5,color="lightgray", fill="lightgray")+
scale_colour_manual(values=mycols)+
scale_fill_manual(values=mycols)+
geom_vline(data=summary_regimes,aes(xintercept = mean),linetype="solid",colour=c(mycols),size=0.75)+
geom_vline(data=summary_regimes,aes(xintercept = mean-se),linetype="dotted",colour=c(mycols),size=0.45)+
geom_vline(data=summary_regimes,aes(xintercept = mean+se),linetype="dotted",colour=c(mycols),size=0.45)+
labs(x="mean \n convex hull area", y="density")+
#xlim(c(0,25))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=14,face="bold"),axis.text=element_text(size=8),legend.position = "none")
ggarrange(theta_plot,sigma_plot, bm_plot, nrow=3,ncol=1)
theta_plot= ggplot(data= model_estimates, aes(x=state, y=theta, fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.20), size = 1, alpha = 0.1) +
geom_boxplot(width = 0.50, outlier.shape = NA, alpha = 0.25)+
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("")+ ylab("theta")+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other", "other" = "Outside AF"))+
#ylim(c(0,750))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=14,face="bold"),axis.text.x=element_text(size=6),legend.position = "none")
sigma_plot= ggplot(data= model_estimates, aes(x=state, y=sqrt(sigma_sq), fill=state)) +
geom_point(aes(color=state),position = position_jitter(width = 0.20), size = 1, alpha = 0.1) +
geom_boxplot(width = 0.50, outlier.shape = NA, alpha = 0.25)+
scale_fill_manual(values=mycols)+
scale_colour_manual(values=mycols)+
xlab("geographic\ndistribution")+ ylab("sigma")+
scale_x_discrete(labels=c("AF" = "AF-endemic", "AFother" = "AF and other", "other" = "Outside AF"))+
#ylim(c(0,3000))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=14,face="bold"),axis.text.x=element_text(size=6),legend.position = "none")
bm_plot= ggplot(data=bm_simulations,aes(x=trait)) +
geom_density(alpha=0.5,color="lightgray", fill="lightgray")+
scale_colour_manual(values=mycols)+
scale_fill_manual(values=mycols)+
geom_vline(data=summary_regimes,aes(xintercept = mean),linetype="solid",colour=c(mycols),size=0.75)+
geom_vline(data=summary_regimes,aes(xintercept = mean-se),linetype="dotted",colour=c(mycols),size=0.45)+
geom_vline(data=summary_regimes,aes(xintercept = mean+se),linetype="dotted",colour=c(mycols),size=0.45)+
labs(x="mean \n convex hull area", y="density")+
#xlim(c(0,25))+
theme(panel.background=element_rect(fill="white"), panel.grid=element_line(colour=NULL),panel.border=element_rect(fill=NA,colour="black"),axis.title=element_text(size=14,face="bold"),axis.text=element_text(size=8),legend.position = "none")
ggarrange(theta_plot,sigma_plot, bm_plot, nrow=3,ncol=1)
tiff("6_graphs/evo_model_estimates_hv.tiff", units="in", width=2.5, height=6, res=600)
ggarrange(theta_plot,sigma_plot, sigma_plot, nrow=3,ncol=1)
dev.off()
